cmake_minimum_required(VERSION 3.24)
project(Advent_of_Code_2023)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED True)
SET(CMAKE_CXX_FLAGS_DEBUG "-O0")

add_library(help_functions INTERFACE)
target_sources(help_functions INTERFACE include/help_func.hpp)
target_include_directories(help_functions INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/include)

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

set_source_files_properties(src/day1.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day1.out src/day1.cpp)
target_link_libraries(day1.out PUBLIC help_functions)
target_link_libraries(day1.out PRIVATE Threads::Threads)
target_include_directories(day1.out PRIVATE data)

set_source_files_properties(src/day2.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day2.out src/day2.cpp)
target_link_libraries(day2.out PUBLIC help_functions)
target_link_libraries(day2.out PRIVATE Threads::Threads)
target_include_directories(day2.out PRIVATE data)

set_source_files_properties(src/day3.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day3.out src/day3.cpp)
target_link_libraries(day3.out PUBLIC help_functions)
target_link_libraries(day3.out PRIVATE Threads::Threads)
target_include_directories(day3.out PRIVATE data)

set_source_files_properties(src/day4.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day4.out src/day4.cpp)
target_link_libraries(day4.out PUBLIC help_functions)
target_link_libraries(day4.out PRIVATE Threads::Threads)
target_include_directories(day4.out PRIVATE data)

set_source_files_properties(src/day5.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day5.out src/day5.cpp)
target_link_libraries(day5.out PUBLIC help_functions)
target_link_libraries(day5.out PRIVATE Threads::Threads)
target_include_directories(day5.out PRIVATE data)

set_source_files_properties(src/day6.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day6.out src/day6.cpp)
target_link_libraries(day6.out PUBLIC help_functions)
target_link_libraries(day6.out PRIVATE Threads::Threads)
target_include_directories(day6.out PRIVATE data)

set_source_files_properties(src/day7.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day7.out src/day7.cpp)
target_link_libraries(day7.out PUBLIC help_functions)
target_link_libraries(day7.out PRIVATE Threads::Threads)
target_include_directories(day7.out PRIVATE data)

set_source_files_properties(src/day8.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day8.out src/day8.cpp)
target_link_libraries(day8.out PUBLIC help_functions)
target_link_libraries(day8.out PRIVATE Threads::Threads)
target_include_directories(day8.out PRIVATE data)

set_source_files_properties(src/day9.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day9.out src/day9.cpp)
target_link_libraries(day9.out PUBLIC help_functions)
target_link_libraries(day9.out PRIVATE Threads::Threads)
target_include_directories(day9.out PRIVATE data)

set_source_files_properties(src/day10.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day10.out src/day10.cpp)
target_link_libraries(day10.out PUBLIC help_functions)
target_link_libraries(day10.out PRIVATE Threads::Threads)
target_include_directories(day10.out PRIVATE data)

set_source_files_properties(src/day11.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day11.out src/day11.cpp)
target_link_libraries(day11.out PUBLIC help_functions)
target_link_libraries(day11.out PRIVATE Threads::Threads)
target_include_directories(day11.out PRIVATE data)

set_source_files_properties(src/day12.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;-O3;")
add_executable(day12.out src/day12.cpp)
target_link_libraries(day12.out PUBLIC help_functions)
target_link_libraries(day12.out PRIVATE Threads::Threads)
target_include_directories(day12.out PRIVATE data)

set_source_files_properties(src/day13.cpp PROPERTIES COMPILE_OPTIONS "-g;-fsanitize=leak;")
add_executable(day13.out src/day13.cpp)
target_link_libraries(day13.out PUBLIC help_functions)
target_link_libraries(day13.out PRIVATE Threads::Threads)
target_include_directories(day13.out PRIVATE data)

## This is ugly, but logs the results in the build log
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day1.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day2.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day3.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day4.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day5.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day6.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day7.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day8.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day9.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day10.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day11.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day12.out)
execute_process(COMMAND ${CMAKE_BINARY_DIR}/day13.out)
